        -:    0:Source:/mnt/d/周秉霖/Bookstore/Command.h
        -:    0:Graph:/mnt/d/周秉霖/Bookstore/cmake-build-debug-coverage/CMakeFiles/Bookstore.dir/main.cpp.gcno
        -:    0:Data:/mnt/d/周秉霖/Bookstore/cmake-build-debug-coverage/CMakeFiles/Bookstore.dir/main.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by zbl on 2021/12/18.
        -:    3://
        -:    4:
        -:    5:#ifndef BOOKSTORE_COMMAND_H
        -:    6:#define BOOKSTORE_COMMAND_H
        -:    7:
        -:    8:#include <iostream>
        -:    9:#include <unordered_map>
        -:   10:#include <vector>
        -:   11:#include <string>
        -:   12:#include "Account.h"
        -:   13:#include "Books.h"
        -:   14:#include "Log.h"
        -:   15:
        -:   16:using std::string;
        -:   17:using std::vector;
        -:   18:using std::cin;
        -:   19:using std::cout;
        -:   20:using std::endl;
        -:   21:
        -:   22:class Command{//中枢系统，完成以下任务 1.指令的合法性的检查。2.指令的解析。 3.指令的运行。
        -:   23:private:
        -:   24:    vector<string> Pars_Op;//记录解析后的操作
        -:   25:    Account_System AccountSystem;
        -:   26:    Book_System BookSystem;
        -:   27:    Log_System LogSystem;
        -:   28:public:
function _ZN7CommandC2Ev called 1 returned 100% blocks executed 55%
        1:   29:    Command(){//创建超级用户
        1:   29-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
call    4 returned 1
call    5 returned 1
call    6 returned 1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:   29-block  1
call   10 returned 1
call   11 returned 1
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   29-block  2
call   16 returned 1
call   17 returned 1
call   18 returned 1
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
    $$$$$:   29-block  3
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
    $$$$$:   29-block  4
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
    $$$$$:   29-block  5
call   30 never executed
call   31 never executed
call   32 never executed
call   33 never executed
    $$$$$:   29-block  6
call   34 never executed
call   35 never executed
call   36 never executed
        1:   30:        AccountSystem.init();
        1:   30-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   31:    }
        1:   31-block  0
function _ZN7Command3preERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 29 returned 100% blocks executed 80%
       29:   32:    void pre(string& cmd){//去除多余的空格
        -:   33:        //1.若全为空白
       29:   34:        bool Is_Blank = 1;
      29*:   35:        for(int i = 0; i < cmd.length(); ++i)
       29:   35-block  0
       29:   35-block  1
call    0 returned 29
call    1 returned 29
branch  2 taken 29 (fallthrough)
branch  3 taken 0
    %%%%%:   35-block  2
       29:   36:            if(cmd[i] != ' '){
       29:   36-block  0
call    0 returned 29
call    1 returned 29
branch  2 taken 29 (fallthrough)
branch  3 taken 0 (throw)
       29:   36-block  1
call    4 returned 29
branch  5 taken 29 (fallthrough)
branch  6 taken 0
       29:   37:                Is_Blank = 0;
       29:   38:                break;
       29:   38-block  0
        -:   39:            }
       29:   40:        if(Is_Blank){
       29:   40-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 29
    #####:   41:            cmd = " ";
    %%%%%:   41-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    #####:   42:            return;
    %%%%%:   42-block  0
        -:   43:        }
        -:   44:
        -:   45:        //2.不全为空白，需要处理行首行末的空格以及多余的空格
       29:   46:        int len = cmd.length(), l, r;
       29:   46-block  0
call    0 returned 29
call    1 returned 29
       29:   47:        bool *book = new bool[len];
call    0 returned 29
branch  1 taken 29 (fallthrough)
branch  2 taken 0 (throw)
      659:   48:        for(int i = 0; i < len; ++i)
       29:   48-block  0
      659:   48-block  1
branch  0 taken 630 (fallthrough)
branch  1 taken 29
      630:   49:            book[i] = 0;
      630:   49-block  0
call    0 returned 630
call    1 returned 630
      29*:   50:        for(int i = 0; i < len; ++i)
       29:   50-block  0
       29:   50-block  1
branch  0 taken 29 (fallthrough)
branch  1 taken 0
    %%%%%:   50-block  2
       29:   51:            if(cmd[i] != ' '){
       29:   51-block  0
call    0 returned 29
call    1 returned 29
branch  2 taken 29 (fallthrough)
branch  3 taken 0 (throw)
       29:   51-block  1
call    4 returned 29
branch  5 taken 29 (fallthrough)
branch  6 taken 0
       29:   52:                l = i;
       29:   53:                break;
       29:   53-block  0
        -:   54:            }
      29*:   55:        for(int i = len - 1; i >= 0; --i)
       29:   55-block  0
       29:   55-block  1
branch  0 taken 29 (fallthrough)
branch  1 taken 0
    %%%%%:   55-block  2
       29:   56:            if(cmd[i] != ' '){
       29:   56-block  0
call    0 returned 29
call    1 returned 29
branch  2 taken 29 (fallthrough)
branch  3 taken 0 (throw)
       29:   56-block  1
call    4 returned 29
branch  5 taken 29 (fallthrough)
branch  6 taken 0
       29:   57:                r = i;
       29:   58:                break;
       29:   58-block  0
        -:   59:            }
      630:   60:        for(int i = l + 1; i <= r; ++i)
       29:   60-block  0
      630:   60-block  1
branch  0 taken 601 (fallthrough)
branch  1 taken 29
      601:   60-block  2
     601*:   61:            if(cmd[i] == ' ' && cmd[i - 1] == ' '){
      601:   61-block  0
call    0 returned 601
call    1 returned 601
branch  2 taken 601 (fallthrough)
branch  3 taken 0 (throw)
      601:   61-block  1
call    4 returned 601
branch  5 taken 49 (fallthrough)
branch  6 taken 552
       49:   61-block  2
call    7 returned 49
call    8 returned 49
branch  9 taken 49 (fallthrough)
branch 10 taken 0 (throw)
       49:   61-block  3
call   11 returned 49
branch 12 taken 0 (fallthrough)
branch 13 taken 49
    %%%%%:   61-block  4
      601:   61-block  5
      601:   61-block  6
branch 14 taken 0 (fallthrough)
branch 15 taken 601
    #####:   62:                book[i] = 1;
    %%%%%:   62-block  0
call    0 never executed
call    1 never executed
        -:   63:            }
       87:   64:        string new_cmd = "";
       29:   64-block  0
call    0 returned 29
call    1 returned 29
call    2 returned 29
call    3 returned 29
branch  4 taken 29 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 29
       29:   64-block  1
call    7 returned 29
    $$$$$:   64-block  2
call    8 never executed
    $$$$$:   64-block  3
call    9 never executed
      659:   65:        for(int i = l; i <= r; ++i){
      659:   65-block  0
branch  0 taken 630 (fallthrough)
branch  1 taken 29
      630:   65-block  1
     630*:   66:            if(!book[i]) new_cmd += cmd[i];
      630:   66-block  0
call    0 returned 630
call    1 returned 630
branch  2 taken 0 (fallthrough)
branch  3 taken 630
    %%%%%:   66-block  1
      630:   66-block  2
branch  4 taken 630 (fallthrough)
branch  5 taken 0
      630:   66-block  3
call    6 returned 630
call    7 returned 630
branch  8 taken 630 (fallthrough)
branch  9 taken 0 (throw)
      630:   66-block  4
call   10 returned 630
call   11 returned 630
branch 12 taken 630 (fallthrough)
branch 13 taken 0 (throw)
        -:   67:        }
       29:   68:        delete []book;
       29:   68-block  0
branch  0 taken 29 (fallthrough)
branch  1 taken 0
       29:   68-block  1
call    2 returned 29
       29:   69:        cmd = new_cmd;
       29:   69-block  0
call    0 returned 29
call    1 returned 29
branch  2 taken 29 (fallthrough)
branch  3 taken 0 (throw)
       29:   70:        return;
       29:   70-block  0
        -:   71:    }
function _ZN7Command7get_cmdERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 29 returned 100% blocks executed 83%
       29:   72:    void get_cmd(const string& cmd){
       29:   73:        Pars_Op.clear();
       29:   73-block  0
call    0 returned 29
call    1 returned 29
call    2 returned 29
       87:   74:        string tmp_op = "";
call    0 returned 29
call    1 returned 29
call    2 returned 29
call    3 returned 29
branch  4 taken 29 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 29
       29:   74-block  0
call    7 returned 29
    $$$$$:   74-block  1
call    8 never executed
    $$$$$:   74-block  2
call    9 never executed
       29:   75:        int len = cmd.length();
call    0 returned 29
call    1 returned 29
      688:   76:        for(int i = 0; i <= len; ++i){
      688:   76-block  0
branch  0 taken 659 (fallthrough)
branch  1 taken 29
      659:   76-block  1
      659:   77:            if(i == len || cmd[i] == ' '){//遇到空格则取出命令
      659:   77-block  0
branch  0 taken 630 (fallthrough)
branch  1 taken 29
      630:   77-block  1
call    2 returned 630
call    3 returned 630
call    4 returned 630
branch  5 taken 49 (fallthrough)
branch  6 taken 581
       78:   77-block  2
      581:   77-block  3
      659:   77-block  4
branch  7 taken 78 (fallthrough)
branch  8 taken 581
       78:   78:                Pars_Op.push_back(tmp_op);
       78:   78-block  0
call    0 returned 78
call    1 returned 78
call    2 returned 78
branch  3 taken 78 (fallthrough)
branch  4 taken 0 (throw)
       78:   79:                tmp_op.clear();
       78:   79-block  0
call    0 returned 78
        -:   80:            }
        -:   81:            else{
      581:   82:                tmp_op += cmd[i];
      581:   82-block  0
call    0 returned 581
call    1 returned 581
call    2 returned 581
call    3 returned 581
branch  4 taken 581 (fallthrough)
branch  5 taken 0 (throw)
        -:   83:            }
        -:   84:        }
       29:   85:    }
function _ZN7Command3runEv called 29 returned 100% blocks executed 26%
       29:   86:    void run(){//解析完命令开始运行命令
        -:   87:        // #基础指令
        -:   88://        AccountSystem.Get_Size();
       29:   89:        if(Pars_Op.size() == 0){
       29:   89-block  0
call    0 returned 29
call    1 returned 29
call    2 returned 29
branch  3 taken 0 (fallthrough)
branch  4 taken 29
    #####:   90:            cout << "Invalid" << endl;
    %%%%%:   90-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
    #####:   91:            return;
        -:   92:        }
      29*:   93:        if(Pars_Op.size() == 1 && Pars_Op[0] == " ")//仅有空白的指令是合法的
       29:   93-block  0
call    0 returned 29
call    1 returned 29
call    2 returned 29
branch  3 taken 11 (fallthrough)
branch  4 taken 18
       11:   93-block  1
call    5 returned 11
call    6 returned 11
call    7 returned 11
call    8 returned 11
call    9 returned 11
branch 10 taken 0 (fallthrough)
branch 11 taken 11
    %%%%%:   93-block  2
       29:   93-block  3
       29:   93-block  4
branch 12 taken 0 (fallthrough)
branch 13 taken 29
    #####:   94:            return;
    %%%%%:   94-block  0
       29:   95:        if(Pars_Op[0] == "quit" || Pars_Op[0] == "exit"){
       29:   95-block  0
call    0 returned 29
call    1 returned 29
call    2 returned 29
call    3 returned 29
call    4 returned 29
branch  5 taken 29 (fallthrough)
branch  6 taken 0
       29:   95-block  1
call    7 returned 29
call    8 returned 29
call    9 returned 29
call   10 returned 29
call   11 returned 29
branch 12 taken 1 (fallthrough)
branch 13 taken 28
        1:   95-block  2
       28:   95-block  3
       29:   95-block  4
branch 14 taken 1 (fallthrough)
branch 15 taken 28
        1:   96:            if(Pars_Op.size() > 1){
        1:   96-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    #####:   97:                cout << "Invalid" << endl;
    %%%%%:   97-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
    #####:   98:                return;
        -:   99:            }
        -:  100:            else{
        1:  101:                AccountSystem.Quit();
        1:  101-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
        1:  102:                return;
        -:  103:            }
        -:  104:        }
        -:  105:
        -:  106:        // #账户系统指令
       28:  107:        if(Pars_Op[0] == "su"){
       28:  107-block  0
call    0 returned 28
call    1 returned 28
call    2 returned 28
call    3 returned 28
call    4 returned 28
branch  5 taken 10 (fallthrough)
branch  6 taken 18
       10:  108:            if(Pars_Op.size() == 3)
       10:  108-block  0
call    0 returned 10
call    1 returned 10
call    2 returned 10
branch  3 taken 10 (fallthrough)
branch  4 taken 0
       10:  109:                AccountSystem.Login(Pars_Op[1], Pars_Op[2]);
       10:  109-block  0
call    0 returned 10
call    1 returned 10
call    2 returned 10
call    3 returned 10
call    4 returned 10
call    5 returned 10
call    6 returned 10
call    7 returned 10
call    8 returned 10
call    9 returned 10
call   10 returned 10
call   11 returned 10
        -:  110:            else
    #####:  111:                AccountSystem.Login(Pars_Op[1], "");
    %%%%%:  111-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  111-block  1
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
branch 15 never executed
branch 16 never executed
    %%%%%:  111-block  2
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
    $$$$$:  111-block  3
call   21 never executed
    $$$$$:  111-block  4
call   22 never executed
    $$$$$:  111-block  5
call   23 never executed
    $$$$$:  111-block  6
call   24 never executed
       10:  112:            return;
       10:  112-block  0
        -:  113:        }
       18:  114:        if(Pars_Op[0] == "logout"){
       18:  114-block  0
call    0 returned 18
call    1 returned 18
call    2 returned 18
call    3 returned 18
call    4 returned 18
branch  5 taken 10 (fallthrough)
branch  6 taken 8
       10:  115:            AccountSystem.Logout();
       10:  115-block  0
call    0 returned 10
call    1 returned 10
call    2 returned 10
call    3 returned 10
       10:  116:            return;
        -:  117:        }
        8:  118:        if(Pars_Op[0] == "register"){
        8:  118-block  0
call    0 returned 8
call    1 returned 8
call    2 returned 8
call    3 returned 8
call    4 returned 8
branch  5 taken 3 (fallthrough)
branch  6 taken 5
        3:  119:            if(Pars_Op.size() != 4){
        3:  119-block  0
call    0 returned 3
call    1 returned 3
call    2 returned 3
branch  3 taken 0 (fallthrough)
branch  4 taken 3
    #####:  120:                cout << "Invalid" << endl;
    %%%%%:  120-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
    #####:  121:                return;
        -:  122:            }
        3:  123:            AccountSystem.Register(Pars_Op[1], Pars_Op[2], Pars_Op[3]);
        3:  123-block  0
call    0 returned 3
call    1 returned 3
call    2 returned 3
call    3 returned 3
call    4 returned 3
call    5 returned 3
call    6 returned 3
call    7 returned 3
call    8 returned 3
call    9 returned 3
call   10 returned 3
call   11 returned 3
call   12 returned 3
call   13 returned 3
call   14 returned 3
call   15 returned 3
        3:  124:            return;
        -:  125:        }
        5:  126:        if(Pars_Op[0] == "passwd"){
        5:  126-block  0
call    0 returned 5
call    1 returned 5
call    2 returned 5
call    3 returned 5
call    4 returned 5
branch  5 taken 0 (fallthrough)
branch  6 taken 5
    #####:  127:            if(Pars_Op.size() == 3){//无密码
    %%%%%:  127-block  0
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
    #####:  128:                AccountSystem.Passwd(Pars_Op[1], Pars_Op[2], "");
    %%%%%:  128-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  128-block  1
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
branch 19 never executed
branch 20 never executed
    %%%%%:  128-block  2
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
    $$$$$:  128-block  3
call   25 never executed
    $$$$$:  128-block  4
call   26 never executed
    $$$$$:  128-block  5
call   27 never executed
    $$$$$:  128-block  6
call   28 never executed
        -:  129:            }
        -:  130:            else{//需要密码
    #####:  131:                AccountSystem.Passwd(Pars_Op[1], Pars_Op[3], Pars_Op[2]);
    %%%%%:  131-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
        -:  132:            }
    #####:  133:            return;
    %%%%%:  133-block  0
        -:  134:        }
        5:  135:        if(Pars_Op[0] == "useradd"){
        5:  135-block  0
call    0 returned 5
call    1 returned 5
call    2 returned 5
call    3 returned 5
call    4 returned 5
branch  5 taken 5 (fallthrough)
branch  6 taken 0
        5:  136:            if(Pars_Op.size() != 5){
        5:  136-block  0
call    0 returned 5
call    1 returned 5
call    2 returned 5
branch  3 taken 0 (fallthrough)
branch  4 taken 5
    #####:  137:                cout << "Invalid" << endl;
    %%%%%:  137-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  137-block  1
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
    #####:  138:                return;
    %%%%%:  138-block  0
        -:  139:            }
        5:  140:            int pri = 0;
        5:  140-block  0
call    0 returned 5
       10:  141:            for(int i = 0; i < Pars_Op[3].length(); ++i){
       10:  141-block  0
call    0 returned 10
call    1 returned 10
call    2 returned 10
call    3 returned 10
call    4 returned 10
branch  5 taken 5 (fallthrough)
branch  6 taken 5
        5:  142:                pri = pri * 10 + Pars_Op[3][i] - '0';
        5:  142-block  0
call    0 returned 5
call    1 returned 5
call    2 returned 5
call    3 returned 5
call    4 returned 5
branch  5 taken 5 (fallthrough)
branch  6 taken 0 (throw)
        5:  142-block  1
call    7 returned 5
        -:  143:            }
        5:  144:            AccountSystem.Useradd(Pars_Op[1], Pars_Op[2], pri, Pars_Op[4]);
        5:  144-block  0
call    0 returned 5
call    1 returned 5
call    2 returned 5
call    3 returned 5
call    4 returned 5
call    5 returned 5
call    6 returned 5
call    7 returned 5
call    8 returned 5
call    9 returned 5
call   10 returned 5
call   11 returned 5
call   12 returned 5
call   13 returned 5
call   14 returned 5
call   15 returned 5
branch 16 taken 5 (fallthrough)
branch 17 taken 0 (throw)
        5:  145:            return;
        5:  145-block  0
        -:  146:        }
    #####:  147:        if(Pars_Op[0] == "delete"){
    %%%%%:  147-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    #####:  148:            AccountSystem.Delete(Pars_Op[1]);
    %%%%%:  148-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
    #####:  149:            return;
        -:  150:        }
        -:  151:
        -:  152:        // #图书系统指令
    #####:  153:        if(Pars_Op[0] == "show" && ( Pars_Op.size() == 1 || Pars_Op[1] != "finance")){
    %%%%%:  153-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  153-block  1
call    7 never executed
call    8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:  153-block  2
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:  153-block  3
    %%%%%:  153-block  4
    %%%%%:  153-block  5
branch 19 never executed
branch 20 never executed
    #####:  154:            if(Pars_Op.size() == 1){
    %%%%%:  154-block  0
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
    #####:  155:                BookSystem.Show(AccountSystem);
    %%%%%:  155-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
    #####:  156:                return;
        -:  157:            }
    #####:  158:            if(Pars_Op.size() == 2){
    %%%%%:  158-block  0
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
    #####:  159:                BookSystem.Show(AccountSystem, Pars_Op[1]);
    %%%%%:  159-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
    #####:  160:                return;
        -:  161:            }
        -:  162:            else{
    #####:  163:                cout << "Invalid" << endl;
    %%%%%:  163-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
    #####:  164:                return;
        -:  165:            }
        -:  166:        }
    #####:  167:        if(Pars_Op[0] == "buy"){
    %%%%%:  167-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    #####:  168:            if(Pars_Op.size() != 3){
    %%%%%:  168-block  0
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
    #####:  169:                cout << "Invalid" << endl;
    %%%%%:  169-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  169-block  1
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
    #####:  170:                return;
    %%%%%:  170-block  0
        -:  171:            }
    #####:  172:            int num = 0;
    %%%%%:  172-block  0
call    0 never executed
    #####:  173:            for(int i = 0; i < Pars_Op[2].length(); ++i){
    %%%%%:  173-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    #####:  174:                num = num * 10 + Pars_Op[2][i] - '0';
    %%%%%:  174-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  174-block  1
call    7 never executed
        -:  175:            }
    #####:  176:            double tot;
    %%%%%:  176-block  0
call    0 never executed
    #####:  177:            bool flag = BookSystem.Buy(AccountSystem, Pars_Op[1], num, tot);
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
branch  9 never executed
branch 10 never executed
    %%%%%:  177-block  0
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
branch 15 never executed
branch 16 never executed
    %%%%%:  177-block  1
call   17 never executed
call   18 never executed
    $$$$$:  177-block  2
call   19 never executed
    $$$$$:  177-block  3
call   20 never executed
    #####:  178:            if(flag){
branch  0 never executed
branch  1 never executed
    #####:  179:                LogSystem.add_finance(Pars_Op[0], tot);
    %%%%%:  179-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
        -:  180:            }
    #####:  181:            return;
    %%%%%:  181-block  0
        -:  182:        }
    #####:  183:        if(Pars_Op[0] == "select"){
    %%%%%:  183-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    #####:  184:            if(Pars_Op.size() != 2){
    %%%%%:  184-block  0
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
    #####:  185:                cout << "Invalid" << endl;
    %%%%%:  185-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
    #####:  186:                return;
        -:  187:            }
    #####:  188:            BookSystem.Select(AccountSystem, Pars_Op[1]);
    %%%%%:  188-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
    #####:  189:            return;
        -:  190:        }
    #####:  191:        if(Pars_Op[0] == "modify"){
    %%%%%:  191-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
        -:  192:            //todo：check the invalid！！！
    #####:  193:            for(int i = 1; i < Pars_Op.size(); ++i){
    %%%%%:  193-block  0
    %%%%%:  193-block  1
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
    #####:  194:                BookSystem.Modify(AccountSystem, Pars_Op[i]);
    %%%%%:  194-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
        -:  195:            }
    #####:  196:            return;
    %%%%%:  196-block  0
        -:  197:        }
    #####:  198:        if(Pars_Op[0] == "import"){
    %%%%%:  198-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    #####:  199:            if(Pars_Op.size() != 3){
    %%%%%:  199-block  0
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
    #####:  200:                cout << "Invalid" << endl;
    %%%%%:  200-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  200-block  1
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
    #####:  201:                return;
    %%%%%:  201-block  0
        -:  202:            }
    #####:  203:            int q;
    %%%%%:  203-block  0
call    0 never executed
    #####:  204:            double p;
call    0 never executed
    #####:  205:            q = std::stoi(Pars_Op[1]);
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    #####:  206:            p = std::stod(Pars_Op[2]);
    %%%%%:  206-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    #####:  207:            bool flag = BookSystem.Import(AccountSystem, q, p);
    %%%%%:  207-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
    #####:  208:            if(flag){
    %%%%%:  208-block  0
branch  0 never executed
branch  1 never executed
    #####:  209:                LogSystem.add_finance(Pars_Op[0], p);
    %%%%%:  209-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
        -:  210:            }
    #####:  211:            return;
    %%%%%:  211-block  0
        -:  212:        }
        -:  213:
        -:  214:        // #日志系统指令
    #####:  215:        if(Pars_Op[0] == "report"){
    %%%%%:  215-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
        -:  216:            //todo
    #####:  217:            return;
    %%%%%:  217-block  0
        -:  218:        }
    #####:  219:        if(Pars_Op[0] == "show" && Pars_Op[1] == "finance"){
    %%%%%:  219-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  219-block  1
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
branch 12 never executed
branch 13 never executed
    %%%%%:  219-block  2
    %%%%%:  219-block  3
    %%%%%:  219-block  4
branch 14 never executed
branch 15 never executed
    #####:  220:            if(Pars_Op.size() != 2 && Pars_Op.size() != 3){
    %%%%%:  220-block  0
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
    %%%%%:  220-block  1
call    5 never executed
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
    %%%%%:  220-block  2
    %%%%%:  220-block  3
    %%%%%:  220-block  4
branch 10 never executed
branch 11 never executed
    #####:  221:                cout << "Invalid" << endl;
    %%%%%:  221-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
    #####:  222:                return;
        -:  223:            }
    #####:  224:            if(Pars_Op.size() == 2){
    %%%%%:  224-block  0
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
    #####:  225:                LogSystem.show();
    %%%%%:  225-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
        -:  226:            }
        -:  227:            else{
    #####:  228:                int t = std::stoi(Pars_Op[2]);
    %%%%%:  228-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
branch  6 never executed
branch  7 never executed
    #####:  229:                LogSystem.show(t);
    %%%%%:  229-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
        -:  230:            }
    #####:  231:            return;
    %%%%%:  231-block  0
        -:  232:        }
    #####:  233:        if(Pars_Op[0] == "report" && Pars_Op[1] == "finance"){
    %%%%%:  233-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  233-block  1
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
branch 12 never executed
branch 13 never executed
    %%%%%:  233-block  2
    %%%%%:  233-block  3
    %%%%%:  233-block  4
branch 14 never executed
branch 15 never executed
        -:  234:            //todo
    #####:  235:            return;
    %%%%%:  235-block  0
        -:  236:        }
    #####:  237:        if(Pars_Op[0] == "report" && Pars_Op[1] == "employee"){
    %%%%%:  237-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  237-block  1
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
branch 12 never executed
branch 13 never executed
    %%%%%:  237-block  2
    %%%%%:  237-block  3
    %%%%%:  237-block  4
branch 14 never executed
branch 15 never executed
        -:  238:            //todo
    #####:  239:            return;
    %%%%%:  239-block  0
        -:  240:        }
    #####:  241:        if(Pars_Op[0] == "log"){
    %%%%%:  241-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
        -:  242:            //todo
    #####:  243:            return;
    %%%%%:  243-block  0
        -:  244:        }
        -:  245:        //仍然不返回说明指令不合法
        -:  246:        //todo:处理不合法的指令
    #####:  247:        cout << "Invalid\n";
    %%%%%:  247-block  0
call    0 never executed
    #####:  248:        return;
        -:  249:    }
        -:  250:};
        -:  251:
        -:  252:#endif //BOOKSTORE_COMMAND_H
